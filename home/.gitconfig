[user]
  name = Steven Haddox
  email = steven.haddox@gmail.com
[github]
  user = stevenhaddox
[color]
  ui = true
[core]
  quotepath = false
  eol       = lf
  autocrlf  = input
  excludesfile = ~/.gitignore
	pager = less -FRSX
[alias]
  ahead = log origin/master..HEAD --oneline
  serve = !git daemon --base-path=. --export-all --reuseaddr --informative-errors --verbose
  hub   = !git daemon --base-path=. --export-all --enable=receive-pack --reuseaddr --informative-errors --verbose
  notes = !"git ls-files | xargs notes | awk -F: '{ print $1,$2; print $3,$4; print $5}' | grcat conf.notes "
  graph = !"git lg1"
  lg1     = log --graph --format=format:'%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(yellow)%d%C(reset)' --abbrev-commit --date=relative
  lg1-all = log --graph --all --format=format:'%C(blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(yellow)%d%C(reset)' --abbrev-commit --date=relative
  lg2     = log --graph --format=format:'%C(blue)%h%C(reset) - %C(cyan)%aD%C(reset) %C(green)(%ar)%C(reset)%C(yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
  lg2-all = log --graph --all --format=format:'%C(blue)%h%C(reset) - %C(cyan)%aD%C(reset) %C(green)(%ar)%C(reset)%C(yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
  graph-branch = log --color --date-order --graph --oneline --decorate --simplify-by-decoration
  graph-old = log --graph --format='%h %Cred %ar %Cgreen %s %Cblue %an'
  today = log --since=midnight --author='Steven Haddox' --oneline
  subs-update = !"git submodule update --remote" # git fetch, pull, add for next commit on all submodules
  subs-init   = !"git submodule init; git subs-update" # Initialize a new clone's existing submodules
  # https://coderwall.com/p/ok-iyg/git-prev-next
  prev = checkout HEAD^1
  next = "!f() { BRANCH_NAME=$1; BRANCH_NAME=${BRANCH_NAME:=master} ; echo \"Walking up ${BRANCH_NAME}\"; git log --reverse --pretty=%H ${BRANCH_NAME} | awk \"/$(git rev-parse HEAD)/{getline;print}\" | xargs git checkout ; }; f "
[branch "master"]
  rebase = true
[config "branch"]
  autosetuprebase = always
[push]
  default = current
[url "git@github.com"]
  insteadOf = gh
[url "git@gitlab.com"]
  insteadOf = gl
[include]
  path = ~/.gitconfig_local
[difftool "Kaleidoscope"]
  cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[diff]
  tool = Kaleidoscope
[difftool]
  prompt = false
[mergetool "Kaleidoscope"]
  cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" \"$REMOTE\"
  trustExitCode = true
[merge]
  tool = Kaleidoscope
[mergetool]
  prompt = false
  keepBackup = false
[pager]
  diff = false
  tag = false
